// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CommentsColumns holds the columns for the "comments" table.
	CommentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "comment", Type: field.TypeString, Unique: true, Size: 2147483647},
		{Name: "likes", Type: field.TypeInt},
		{Name: "experience_comments", Type: field.TypeInt, Nullable: true},
		{Name: "user_comments", Type: field.TypeInt, Nullable: true},
	}
	// CommentsTable holds the schema information for the "comments" table.
	CommentsTable = &schema.Table{
		Name:       "comments",
		Columns:    CommentsColumns,
		PrimaryKey: []*schema.Column{CommentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "comments_experiences_comments",
				Columns:    []*schema.Column{CommentsColumns[5]},
				RefColumns: []*schema.Column{ExperiencesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "comments_users_comments",
				Columns:    []*schema.Column{CommentsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ExperiencesColumns holds the columns for the "experiences" table.
	ExperiencesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString, Size: 75},
		{Name: "content", Type: field.TypeString, Unique: true, Size: 2147483647},
		{Name: "views", Type: field.TypeInt},
		{Name: "likes", Type: field.TypeInt},
		{Name: "user_posts", Type: field.TypeInt, Nullable: true},
	}
	// ExperiencesTable holds the schema information for the "experiences" table.
	ExperiencesTable = &schema.Table{
		Name:       "experiences",
		Columns:    ExperiencesColumns,
		PrimaryKey: []*schema.Column{ExperiencesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "experiences_users_posts",
				Columns:    []*schema.Column{ExperiencesColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TagsColumns holds the columns for the "tags" table.
	TagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "tag", Type: field.TypeString, Unique: true, Size: 25},
	}
	// TagsTable holds the schema information for the "tags" table.
	TagsTable = &schema.Table{
		Name:       "tags",
		Columns:    TagsColumns,
		PrimaryKey: []*schema.Column{TagsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeUUID},
		{Name: "last_name", Type: field.TypeString, Nullable: true, Size: 75},
		{Name: "first_name", Type: field.TypeString, Nullable: true, Size: 75},
		{Name: "age", Type: field.TypeInt, Nullable: true},
		{Name: "profile", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Size: 40},
		{Name: "password", Type: field.TypeString, Size: 2147483647},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CommentsTable,
		ExperiencesTable,
		TagsTable,
		UsersTable,
	}
)

func init() {
	CommentsTable.ForeignKeys[0].RefTable = ExperiencesTable
	CommentsTable.ForeignKeys[1].RefTable = UsersTable
	ExperiencesTable.ForeignKeys[0].RefTable = UsersTable
}
